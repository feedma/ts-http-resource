import{_ as a,r as s,o as n,c as i,a as e,b as r,d as o,e as c}from"./app.55771866.js";const h={},d=e("h1",{id:"introduction",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),o(" Introduction")],-1),l=e("strong",null,"HttpService",-1),u=o(" is a framework-agnostic HTTP client built on top of "),p={href:"https://www.npmjs.com/package/axios",target:"_blank",rel:"noopener noreferrer"},f=o("axios"),m=c('<p>The purpose of creating <strong>HttpService</strong> is to provide a tool with an easy way to handle the axios setup reducing the complexity to manage the configurations for multiple hosts.</p><h2 id="why-not" tabindex="-1"><a class="header-anchor" href="#why-not" aria-hidden="true">#</a> Why Not ...?</h2><h3 id="use-axios-only" tabindex="-1"><a class="header-anchor" href="#use-axios-only" aria-hidden="true">#</a> Use axios only</h3><p><strong>Axios</strong> is a powerful HTTP client lib and in the most use cases we don&#39;t need to handle multiple host to make API requests, so if you are looking for reducing the axios setup for multiple hosts clients in your projects, or you are a <em>OOP</em> lover, this package is for you.</p><h3 id="build-on-top-of-the-js-fetch-api" tabindex="-1"><a class="header-anchor" href="#build-on-top-of-the-js-fetch-api" aria-hidden="true">#</a> Build on top of the JS fetch API</h3><p>The javascript <strong>fetch API</strong> is great as well, however <strong>axios</strong> is one of the best packages for make request with a big community support, and in our experience axios covers the mostly edge cases that we need. In the another hand, the goal of this package is not to provide a new HTTP client built form scratch to cover the same use cases, which can introduce issues that are already solved in axios by the community.</p>',6);function _(g,x){const t=s("ExternalLinkIcon");return n(),i("div",null,[d,e("p",null,[l,u,e("a",p,[f,r(t)])]),m])}const w=a(h,[["render",_],["__file","index.html.vue"]]);export{w as default};
