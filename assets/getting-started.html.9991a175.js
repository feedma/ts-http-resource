import{_ as o,r as c,o as i,c as p,a as n,b as e,d as s,e as t}from"./app.55771866.js";const l={},r=n("h1",{id:"getting-started",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getting-started","aria-hidden":"true"},"#"),s(" Getting started")],-1),d=s("Since this package is built on top of "),u={href:"https://www.npmjs.com/package/axios",target:"_blank",rel:"noopener noreferrer"},k=s("axios"),h=s(", your project must have installed the axios package first."),v=t(`<h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>To install the <code>HttpService</code> package and the <strong>axios</strong> dependency run the following command in your terminal:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i axios @feedma/http-service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic usage</h2><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h3><p>The <code>HttpService</code> module provides an <em>abstract class</em> that you can extend to configure the <code>axios</code> HTTP client, and the most part of the process is setting the config in your inherited <em>class</em>.</p>`,6),m=s("For example if you want to create a client for the "),g={href:"https://jsonplaceholder.typicode.com",target:"_blank",rel:"noopener noreferrer"},_=s("jsonplaceholder"),b=s(" fake API, a great way to do it is to create the class "),f=n("code",null,"JsonPlaceHolderService",-1),y=s("."),x=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// JsonPlaceHolderService.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> HttpService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@feedma/http-service&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AxiosRequestConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">JsonPlaceHolderService</span> <span class="token keyword">extends</span> <span class="token class-name">HttpService</span> <span class="token punctuation">{</span>
  <span class="token keyword">protected</span> config<span class="token operator">:</span> AxiosRequestConfig <span class="token operator">=</span> <span class="token punctuation">{</span> 
    baseURL<span class="token operator">:</span> <span class="token string">&quot;https://jsonplaceholder.typicode.com&quot;</span> <span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// Yor request methods here ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w=s("As you can see the config property expects an object that implements the "),q=n("code",null,"AxiosRequestConfig",-1),S=s(". Take a look in the "),H={href:"https://axios-http.com/docs/intro",target:"_blank",rel:"noopener noreferrer"},P=s("axios docs"),A=s(" if you want to learn more about the "),j={href:"https://axios-http.com/docs/req_config",target:"_blank",rel:"noopener noreferrer"},R=s("axios request config"),C=s(" properties."),J=t(`<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>A great way to keep yor <code>JsonPlaceHolderService</code> class as clean as possible is storing yor api config into a different file in your project, for example <code>src/configs/services.ts</code>.</p></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// src/configs/services.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> AxiosRequestConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> endpoints<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> AxiosRequestConfig<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  jsonplaceholder<span class="token operator">:</span> <span class="token punctuation">{</span>
    baseURL<span class="token operator">:</span> <span class="token string">&quot;https://jsonplaceholder.typicode.com&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creating-request-methods" tabindex="-1"><a class="header-anchor" href="#creating-request-methods" aria-hidden="true">#</a> Creating request methods</h3>`,3),T=s("Now you are able to add methods for make request to the "),I=n("em",null,"jsonplaceholder",-1),N=s(" API, in this example we will add a method to fetch the list of "),U={href:"https://jsonplaceholder.typicode.com/users",target:"_blank",rel:"noopener noreferrer"},B=s("users"),L=s(", to do it we must use the "),V=n("code",null,"client",-1),E=s(" of our class, the client is an "),F={href:"https://axios-http.com/docs/instance",target:"_blank",rel:"noopener noreferrer"},Y=s("AxiosInstance"),G=s(", so you have all its available methods."),z=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// JsonPlaceHolderService.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> HttpService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@feedma/http-service&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AxiosRequestConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> endpoints <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../config/services&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">JsonPlaceHolderService</span> <span class="token keyword">extends</span> <span class="token class-name">HttpService</span> <span class="token punctuation">{</span>
  <span class="token keyword">protected</span> config<span class="token operator">:</span> AxiosRequestConfig <span class="token operator">=</span> endpoints<span class="token punctuation">.</span>jsonplaceholder<span class="token punctuation">;</span>
  
  <span class="token keyword">async</span> <span class="token function">fetchUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>AxiosResponse<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// Yor additional methods here ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-the-service-class" tabindex="-1"><a class="header-anchor" href="#using-the-service-class" aria-hidden="true">#</a> Using the service class</h3><p>Finally, import the service class in some place in our application to make a request and get the list of users:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// app.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> JsonPlaceHolderService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./JsonPlaceHolderService&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> service <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JsonPlaceHolderService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">app</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> service<span class="token punctuation">.</span><span class="token function">fetchUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token comment">// The rest of our app code...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function D(K,M){const a=c("ExternalLinkIcon");return i(),p("div",null,[r,n("p",null,[d,n("a",u,[k,e(a)]),h]),v,n("p",null,[m,n("a",g,[_,e(a)]),b,f,y]),x,n("p",null,[w,q,S,n("a",H,[P,e(a)]),A,n("a",j,[R,e(a)]),C]),J,n("p",null,[T,I,N,n("a",U,[B,e(a)]),L,V,E,n("a",F,[Y,e(a)]),G]),z])}const Q=o(l,[["render",D],["__file","getting-started.html.vue"]]);export{Q as default};
